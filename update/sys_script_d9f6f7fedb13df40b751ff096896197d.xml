<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_dnf_gw_obf_federal_onboarding_questionnaire</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Auto Generate Questionnaire Forms</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var pdf = [];
	var docs = [];
	for (var x in current){
		if (current[x] != previous[x]  && x != 'sys_updated_on' && x != 'sys_mod_count') {
			gs.info('Field ' + x + ' has changed!');
			if(x == '' || x=='' || x==''){
			/*var gr2 = new GlideRecord('sn_hr_le_case');
			gr2.addQuery('hr_service', '103437c8db75d780af88f5861d961928');
			gr2.addQuery('opened_for', current.employee);
			gr2.addQuery('active', true);
			gr2.query();
			while(gr2.next()){
				gr2.active = false;
				gr2.update();
			}

			var gr = new GlideRecord('sn_hr_le_case');
			gr.initialize(); 
			gr.hr_service = '103437c8db75d780af88f5861d961928';
			gr.opened_for = current.employee;
			gr.state = '10';
			gr.insert();	*/
			}
			if(x == '' || x=='' || x==''){

			}
			if(x == '' || x=='' || x==''){

			}
			if(x == '' || x=='' || x==''){

			}
			if(x == '' || x=='' || x==''){

			}


			/*var gr = new GlideRecord('sn_hr_core_pdf_template_mapping');
			gr.addQuery('script','!=','');
			gr.addQuery('document','!=','');
			gr.query();
			while(gr.next){
				//var rec = {};
				//rec.script = gr.getValue('script');
				//rec.doc = gr.getValue('document');

				//pdf.push(rec);
			}
			for (var y = 0; y < pdf.length; y++){
				if(pdf[y].script.indexOf(current[x]) != -1){
					docs.push(pdf[y].doc);
				}
			}*/
		}
	}
	//gs.info(pdf);
	//gs.info(docs);

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>zpampel</sys_created_by>
        <sys_created_on>2018-07-18 18:52:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d9f6f7fedb13df40b751ff096896197d</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>Auto Generate Questionnaire Forms</sys_name>
        <sys_overrides/>
        <sys_package display_value="Gateway: Federal Onboarding Forms Automation" source="x_dnf_gw_obf">4f2cac37db249700e18dd8c75e9619a4</sys_package>
        <sys_policy/>
        <sys_scope display_value="Gateway: Federal Onboarding Forms Automation">4f2cac37db249700e18dd8c75e9619a4</sys_scope>
        <sys_update_name>sys_script_d9f6f7fedb13df40b751ff096896197d</sys_update_name>
        <sys_updated_by>zpampel</sys_updated_by>
        <sys_updated_on>2018-07-24 13:55:38</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d9f6f7fedb13df40b751ff096896197d"/>
</record_update>
