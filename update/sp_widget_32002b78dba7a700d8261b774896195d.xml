<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope) {  
	/* widget controller */  
	var c = this;

	/*if (c.options.field_list)
		c.cardFields = c.options.field_list.split(",");
	c.getPrimaryField = function getPrimaryField(row){
		return row[c.data.primaryField];
	};*/

	//Set value to show loading spinner
	c.data.loading = true;

	//After page initially loads re-call server script to load data
	c.server.get({
		action: 'retrieve_data'
	}).then(function(response) {

		//Set value to hide loading spinner
		c.data.loading = false;

		console.log('Response');
		console.log(response);

		c.data = response.data;

		if (c.options.show_button) {
			c.data.button_title = c.options.button_title;
			c.data.button_url = c.options.button_url;
		}
	});



	console.log('Options');
	console.log(c.options);

	console.log('this');
	console.log($scope);
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.divider {
  border-bottom: 1px solid $color-accent;
  margin-left: 0;
  margin-right: 0;
}
.cards {
  display: flex;
  flex-direction: column;
  background: $color-lightest;
  border-radius: 5px;
  border: 1px solid $color-darkest;
  cursor: pointer;
  //height: 17em;
  padding: 1.5em;
  box-shadow: 3px 6px 2em $color-darkest;
  //position: relative;
  //transition: height 0.4s, box-shadow 0.5s;
}
/*.cards:hover {
box-shadow: 0 0 2em #999;
height: 38em;
transition: height 0.3s ease, box-shadow 0.5s ease;
}
.cards:hover .divider {
opacity: 0.5;
}
.cards:hover .info {
transition: top 0.5s ease, opacity 1s ease;
visibility: visible;
top: 1%;
opacity: 1;
}
.cards:hover .icon {
font-size: 2em;
//left: 45%;
transition: font-size .3s, left .3s;
}*/
/*.cards .info {
position: relative;
visibility: hidden;
top: -50%;
opacity: 0;
}*/

.cards .icon,
.cards.collapsed .icon {
  color: $color-accent;
  font-size: 4em;
  text-align: center;
  padding: 0em;
  position: relative;
  top: 0em;
  transition: font-size .3s ease;
}

.cards[aria-expanded="true"] .icon {
  font-size: 2em;
}

.cards[aria-expanded="true"] .divider {
  opacity: 0.5;
}

.cards[aria-expanded="true"] .info {
  transition: top 0.5s ease, opacity 1s ease;
  //visibility: visible;
  top: 1%;
  opacity: 1;
}

/*.cards[aria-expanded="true"] {
min-height: 345px;
}*/

.cards .title {
  color: $color-darkest;
  text-align: center;
  font-weight: 300;
}

.cards .btn {
  color: $color-accent;
  border: 1px solid $color-accent;
  border-radius: 3px;
  transition: color 0.3s, background 0.3s;
}
.cards .btn:hover {
  background: $color-accent;
  color: $color-lightest;
  transition: background 0.5s ease;
}
</css>
        <data_table>x_dnf_gw_obf_info_cards_instance_v2</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,expandable_id,icon,show_button,button_title,button_url,show_work_phone,show_user_name,show_salary_grade,show_ssn,show_primary_contact_phone,show_primary_contact_mobile_phone,show_primary_contact_email,show_position,show_pay_step,show_pay_plan,show_occupational_series,show_mobile_phone,show_manager_title,show_manager_phone,show_manager_mobile_phone,show_manager_location,show_manager_email,show_manager,show_location,show_home_phone,show_employment_start_date,show_employee_number,show_email,show_department_primary_contact,show_department,show_cost_center,show_bureau,show_branch_of_service,show_appointment_type,show_agency,short_description</field_list>
        <has_preview>false</has_preview>
        <id>onboarding-employee-info-v5</id>
        <internal>false</internal>
        <link/>
        <name>Onboarding Employee Info v5</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	var me = gs.getUserID();
	var hr_profile = 'sn_hr_core_profile';
	var sysUser = 'sys_user';

	if (!input) {
		return;
	}

	//After page initially loads get data
	if (input && input.action == 'retrieve_data') {
		data.rows = [];

		var hrProfile = new GlideRecord(hr_profile);
		hrProfile.addQuery('user', me);
		//hrProfile.addActiveQuery();
		hrProfile.query();
		hrProfile.next();		
		if(hrProfile){
			var obj = {
				sys_id: hrProfile.getValue('sys_id'),
				user: hrProfile.getDisplayValue('user'),
				eod: hrProfile.getDisplayValue('employment_start_date'),
				employee_number: hrProfile.getDisplayValue('employee_number'),
				ssn: hrProfile.getDisplayValue('ssn'),
				home_phone: hrProfile.getDisplayValue('home_phone'),
				mobile_phone: hrProfile.getDisplayValue('mobile_phone'),
				work_phone: hrProfile.getDisplayValue('work_phone'),
				email: hrProfile.getDisplayValue('user.email'),
				bos: hrProfile.getDisplayValue('x_dnf_gw_found_branch_of_service'),
				occ: hrProfile.getDisplayValue('x_dnf_gw_found_occupational_series'),
				appt_type: hrProfile.getDisplayValue('x_dnf_gw_found_appointment_type'),
				salary_grade: hrProfile.getDisplayValue('x_dnf_gw_found_salary_grade'),
				pay_plan: hrProfile.getDisplayValue('x_dnf_gw_found_pay_plan'),
				pay_step: hrProfile.getDisplayValue('x_dnf_gw_found_pay_step'),
				position: hrProfile.getDisplayValue('position'),
				department: hrProfile.getDisplayValue('user.department'),
				cost_center: hrProfile.getDisplayValue('user.cost_center'),
				location: hrProfile.getDisplayValue('location'),
				manager: hrProfile.getDisplayValue('user.manager'),
				manager_email: hrProfile.getDisplayValue('user.manager.email'),
				manager_phone: hrProfile.getDisplayValue('user.manager.phone'),
				manager_mobile_phone: hrProfile.getDisplayValue('user.manager.mobile_phone'),
				manager_title: hrProfile.getDisplayValue('user.manager.title'),
				manager_location: hrProfile.getDisplayValue('user.manager.location'),
				department_primary_contact: hrProfile.getDisplayValue('user.department.primary_contact'),
				department_primary_contact_email: hrProfile.getDisplayValue('user.department.primary_contact.email'),
				department_primary_contact_phone: hrProfile.getDisplayValue('user.department.primary_contact.phone'),
				department_primary_contact_mobile_phone: hrProfile.getDisplayValue('user.department.primary_contact.mobile_phone'),
				agency: hrProfile.getDisplayValue('user.department.x_dnf_gw_found_agency'),
				bureau: hrProfile.getDisplayValue('user.department.x_dnf_gw_found_bureau')	
			};	
			data.rows.push(obj);	
		}
	}
})();

//Do nothing on initial page load
/*if (!input) {
		return;
	}*/

//After page initially loads get data
//if (input && input.action == 'retrieve_data') {
/*if (options.table) {
		data.rows = [];

		var gr = new GlideRecord(options.table);
		//gr.addQuery('user', me);
		gr.addEncodedQuery(options.filter);
		//gr.setLimit(25);
		gr.query();
		if (!data.primaryField) {
			data.primaryField = gr.getDisplayName();
		}
		var fields = "sys_id," + data.primaryField + "," + options.field_list;
		data.fields = $sp.getFieldsObject(gr, fields);


		while(gr.next()) {
			var row = {};
			if(options.header_field)
				data.header_field=gr.getDisplayValue(options.header_field);		

			if(options.subheader_field)
				data.subheader_field=gr.getDisplayValue(options.subheader_field);

			//$sp.getRecordDisplayValues(row, gr, fields);
			$sp.getRecordElements(row, gr, fields);
			data.rows.push(row);
		}
	}
	})();*/]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>davilu</sys_created_by>
        <sys_created_on>2019-02-08 18:30:13</sys_created_on>
        <sys_id>32002b78dba7a700d8261b774896195d</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Onboarding Employee Info v5</sys_name>
        <sys_package display_value="Gateway: Federal Onboarding Forms Automation" source="x_dnf_gw_obf">4f2cac37db249700e18dd8c75e9619a4</sys_package>
        <sys_policy/>
        <sys_scope display_value="Gateway: Federal Onboarding Forms Automation">4f2cac37db249700e18dd8c75e9619a4</sys_scope>
        <sys_update_name>sp_widget_32002b78dba7a700d8261b774896195d</sys_update_name>
        <sys_updated_by>davilu</sys_updated_by>
        <sys_updated_on>2019-02-08 21:37:46</sys_updated_on>
        <template><![CDATA[<div class="cards" data-toggle="collapse" href="#{{c.options.expandable_id}}" role="button" aria-expanded="false" aria-controls="collapseDiv" ng-click="expandDiv()">
  <span class="{{c.options.icon}} icon"></span>
  <hr class="divider"/>
  <h2 class="title">{{c.options.title}}</h2>
  <div class="info" class="collapse" id={{c.options.expandable_id}} onClick="event.stopPropagation();">
    <hr class="divider"/>
    <div ng-repeat="row in c.data.rows track by $index">
      <h3 ng-if="c.options.show_user_name">{{row.user}}</h3>
      <h5 ng-if="c.options.show_position">{{row.position}}</h5>
      <p ng-if="c.options.show_employment_start_date"><b>Employment Start Date:</b> {{row.eod}}</p> 
      <p ng-if="c.options.show_department"><b>Department:</b> {{row.department}}</p>
      <p ng-if="c.options.show_location"><b>Location:</b> {{row.location}}</p>
      <p ng-if="c.options.show_employee_number"><b>Employee Number:</b> {{row.employee_number}}</p>  
      <p ng-if="c.options.show_email"><b>Email:</b> {{row.email}}</p>
      <p ng-if="c.options.show_home_phone"><b>Home Phone:</b> {{row.home_phone}}</p> 
      <p ng-if="c.options.show_work_phone"><b>Work Phone:</b> {{row.work_phone}}</p> 
      <p ng-if="c.options.show_mobile_phone"><b>Mobile Phone:</b> {{row.mobile_phone}}</p> 
      <p ng-if="c.options.show_ssn"><b>SSN:</b> {{row.ssn}}</p>
      <p ng-if="c.options.show_agency"><b>Agency:</b> {{row.agency}}</p> 
      <p ng-if="c.options.show_bureau"><b>Bureau:</b> {{row.bureau}}</p> 
      <p ng-if="c.options.show_appointment_type"><b>Appointment Type:</b> {{row.appt_type}}</p> 
      <p ng-if="c.options.show_branch_of_service"><b>Branch of Service:</b> {{row.bos}}</p> 
      <p ng-if="c.options.show_occupational_series"><b>Occupational Series:</b> {{row.occ}}</p> 
      <p ng-if="c.options.show_salary_grade"><b>Salary Grade:</b> {{row.salary_grade}}</p> 
      <p ng-if="c.options.show_pay_plan"><b>Pay Plan:</b> {{row.pay_plan}}</p> 
      <p ng-if="c.options.show_pay_step"><b>Pay Step:</b> {{row.pay_step}}</p>
      <p ng-if="c.options.show_cost_center"><b>Cost Center:</b> {{row.cost_center}}</p>
      
      <h3 ng-if="c.options.show_manager">{{row.manager}} (Manager)</h3> 
      <h5 ng-if="c.options.show_manager_title">{{row.manager_title}}</h5> 
      <p ng-if="c.options.show_manager_location"><b>Location:</b> {{row.manager_location}}</p> 
      <p ng-if="c.options.show_manager_email"><b>Email:</b> {{row.manager_email}}</p>       
      <p ng-if="c.options.show_manager_mobile_phone"><b>Mobile Phone:</b> {{row.manager_mobile_phone}}</p> 
      <p ng-if="c.options.show_manager_phone"><b>Phone:</b> {{row.manager_phone}}</p> 

      <h3 ng-if="c.options.show_department_primary_contact">{{row.department_primary_contact}} (Primary Contact)</h3> 
      <p ng-if="c.options.show_primary_contact_email"><b>Email:</b> {{row.department_primary_contact_email}}</p> 
      <p ng-if="c.options.show_primary_contact_mobile_phone"><b>Mobile Phone:</b> {{row.department_primary_contact_mobile_phone}}</p> 
      <p ng-if="c.options.show_primary_contact_phone"><b>Phone:</b> {{row.department_primary_contact_phone}}</p> 
    </div>
    <a href={{c.data.button_url}} target="_blank" ng-if="c.options.show_button" class="btn btn-lg center-block">{{c.data.button_title}}</a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
